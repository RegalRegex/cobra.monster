---
import type { CollectionEntry } from "astro:content";
import { CommentForm } from "./CommentForm";
import { formatDate, formatTime } from "src/utils/stringFormatters";
import markdownit from 'markdown-it';

import Wrex from "./wrex.png";
import ChiStar from "@components/ImageComponents/ChiStar.astro";
import Accordion from "@components/Accordion/Accordion";
import type { ReactNode } from "react";
import type { html } from "satori-html";

/**
 * Credit for Netlify forms comments goes to Emily Goto:
 * @link https://www.emgoto.com/astro-blog-comments/
 */

interface Props {
  comments: CollectionEntry<"comments">["data"]["comments"] | [];
  pageUrl: string;
}

const { comments, pageUrl } = Astro.props;

const getBskyImg = async (bsky: string | null): Promise<string> => {
  if (!bsky) return "";
  const bskyApiData = await fetch(`https://public.api.bsky.app/xrpc/app.bsky.actor.getProfile?actor=${bsky}`);

  if (!bskyApiData.ok) {
    console.error("API fetch failed");
    return "";
  }
  const bskyData = await bskyApiData.json();
  return bskyData.avatar;
};
const md = markdownit();
---

<div class="md:py-8 md:px-20 ">
    <p class="not-prose text-3xl text-white mb-2">Comments</p>
  {
    comments.length > 0 ? (
        <p class="text-white text-xl">Work In Progress ATM! Please mind the jank!</p>
      <div class="pb-4 mb-4 border-yellow border-b-2 flex flex-col gap-4">
        {comments.sort((a,b) => new Date(b.date).valueOf() - new Date(a.date).valueOf()).map(async (comment) => {
          const bskyAvi = await getBskyImg(comment.bsky);
          const avi = bskyAvi ? bskyAvi : Wrex.src;
          return (
            <div class="text-slate-200 text-xl flex gap-4 bg-[#761416] p-4 rounded-md" id={`comment-${comment.id}`}>
              {bskyAvi ? (
                <a href={`https://bsky.app/profile/${comment.bsky}`}>
                  <img src={avi} alt="" class="object-cover self-center  rounded-full aspect-square flex min-w-16 w-16 hover:scale-[1.15] transition duration-300 not-prose" />
                </a>
              ) : (
                <div>
                  <img src={Wrex.src} alt="Wrex!" class="object-cover self-center  rounded-full aspect-square flex min-w-16 w-16 not-prose" />
                </div>
              )}
              <div class="flex flex-col gap-1">
                <span class="flex gap-1 items-center flex-wrap">
                    {comment.url ? (
                    <a href={comment.url} class="text-yellow font-semibold decoration-yellow hover:underline decoration-2">
                        {comment.name}
                    </a>
                    ) : (
                    <span class="text-white">{comment.name}</span>
                    )}
                    <span class="text-slate-200/80 text-base self-center">
                    <ChiStar />
                    </span>
                    <a href={`${pageUrl}#comment-${comment.id}`} class="text-slate-200/80 hover:underline hover:cursor-pointer text-base flex gap-1">
                    <span>{formatDate(comment.date)}</span>
                    <span>&bull;</span>
                    <span>{formatTime(comment.date)}</span>
                    </a>
                </span>
                <Fragment set:html={md.render(comment.text)}/>
              </div>
            </div>
          );
        })}
      </div>
    ) : (<p class="pb-4 mb-4 border-yellow border-b-2">No comments yet!</p>)
  }
    <CommentForm client:idle />
</div>
