---
import { type CollectionEntry, getCollection } from "astro:content";
import PostSummary from "./PostSummary.astro";
import type { ReactElement } from "react";
import { sortCollection } from "src/utils/sortCollection";
import ErrorPage from "./ErrorPage.astro";

interface Props {
  tagId?: string;
}

interface PostsByYear {
  [year: number]: Array<CollectionEntry<"posts">>;
}

const blogEntries = await getCollection("posts");

const { tagId } = Astro.props;

// Excluding About Blurbs and filtering by tag, if necessary
const blogPosts: Array<CollectionEntry<"posts">> = tagId
  ? blogEntries.filter((entry) => !entry.data.blogExclude && entry.data.tags?.map((tag) => tag.id).includes(tagId))
  : blogEntries.filter((entry) => !entry.data.blogExclude);

// Sorting blog posts by year
const blogSort = (): PostsByYear[] => {
  const sortedPosts = sortCollection(blogPosts, "date");
  let yearArray: number[] = [];
  sortedPosts.forEach((post) =>
    yearArray.find((obj) => obj === post.data.date.getFullYear()) === undefined ? yearArray.push(post.data.date.getFullYear()) : "",
  );
  return yearArray.map((year) => {
    return { [year]: sortedPosts.filter((post) => post.data.date.getFullYear() === year) };
  });
};
---

{
  blogPosts.length > 0 ? (
    blogSort().map((yearObj: PostsByYear, index: number) => {
      let yearNum: number = parseInt(Object.keys(yearObj)[0]);
      {
        return (
          <div class:list={["flex sm:flex-row flex-col w-full", `${index !== 0 ? "border-t-4 border-slate-200/40 mt-5" : ""}`]}>
            <div class="text-5xl mr-5 w-fit">
              <h3 class="headerTxt sm:sticky relative top-0 pt-4 font-bold">{yearNum}</h3>
            </div>
            <div class="mt-5 col-start-2">
              {yearObj[yearNum].map((post): ReactElement[] => {
                return (
                  <div class="mb-5">
                    <PostSummary post={post} />
                  </div>
                );
              })}
            </div>
          </div>
        );
      }
    })
  ) : (
    <div class="my-5">
      <ErrorPage subtitle={`No #${tagId} posts found!`} />
    </div>
  )
}
