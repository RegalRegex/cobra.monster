---
import { Image } from "astro:assets";
// Red
import redFull from "@assets/logos/chistars/red/full.png";
import redHalfFull from "@assets/logos/chistars/red/half-full.png";
import redOutline from "@assets/logos/chistars/red/outline.png";
// Yellow
import yellowFull from "@assets/logos/chistars/yellow/full.png";
import yellowHalfFull from "@assets/logos/chistars/yellow/half-full.png";
import yellowOutline from "@assets/logos/chistars/yellow/outline.png";

interface Props {
  rating: number;
  isYellow?: boolean;
  maxWidth?: string;
}
const { rating, isYellow = false, maxWidth = "max-w-6" } = Astro.props;
const hasHalfStar = rating % 1 !== 0;
const emptyCalc = (hasHalfStar ? 4 : 5) - Math.floor(rating);
---

{
  [...Array(Math.floor(rating))].map(() => (
    <Image src={isYellow ? yellowFull : redFull} alt={"Chicago Star"} class={`${maxWidth}  w-full h-fit aspect-square`} />
  ))
}{hasHalfStar ? <Image src={isYellow ? yellowHalfFull : redHalfFull} alt={"Half of a Chicago Star"} class={`${maxWidth}  w-full h-fit aspect-square`} /> : ""}{
  emptyCalc > 0
    ? [...Array(emptyCalc)].map(() => (
        <Image src={isYellow ? yellowOutline : redOutline} alt={"Chicago Star"} class={`aspect-square ${maxWidth}  w-full h-fit`} />
      ))
    : ""
}
