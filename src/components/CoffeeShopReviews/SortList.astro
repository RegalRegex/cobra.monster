---
import InlineEmoji from "@components/ImageComponents/InlineEmoji.astro";
import { capitalizeFirst, upOneLevelUrl } from "src/utils/stringFormatters";
import arrowDown from "@assets/mutantEmoji/utility/arrow_down.png";
interface Props {
  selected?: string;
  pageUrl: string;
}
const { selected, pageUrl } = Astro.props;
// export const cafeReviewSortOptions = ["Date: Newest", "Date: Oldest", "Rating: Low", "Rating: High"];
export enum CAFE_REVIEW_SORT {
  DATE_DESC = "date-desc",
  DATE_ASC = "date-asc",
  RATING_DESC = "rating-desc",
  RATING_ASC = "rating-asc",
  FAVORITES = "favorites",
}

export const getSortField = (valueOfSortEnum: string): "rating" | "date" | "favorites" => {
  if (valueOfSortEnum !== CAFE_REVIEW_SORT.FAVORITES) {
    return valueOfSortEnum === CAFE_REVIEW_SORT.DATE_DESC || valueOfSortEnum === CAFE_REVIEW_SORT.DATE_ASC ? "date" : "rating";
  }
  return "favorites";
};

export const getIsDesc = (valueOfSortEnum: string): boolean =>
  valueOfSortEnum === CAFE_REVIEW_SORT.DATE_DESC || valueOfSortEnum === CAFE_REVIEW_SORT.RATING_DESC;
const cafeReviewSortArray = Object.keys(CAFE_REVIEW_SORT) as Array<CAFE_REVIEW_SORT>;
const starMd = "â˜…";
const basePgPath = `/cafe-reviews`;

// TODO: Remove Date Desc from generation, and add dummy button fake. "cafe-reviews" should be the default, not a separate sorted page.
---

<div class="flex flex-col gap-2" slot="sort">
  <ul class="flex gap-2 flex-wrap">
    <li>
      <a
        href={basePgPath}
        class:list={[
          "hover:brightness-150 rounded-lg font-medium  whitespace-nowrap relative text-slate-200 p-1.5 m-0.5 bg-boxPrimary ring ring-yellow",
          `${selected === CAFE_REVIEW_SORT.DATE_DESC ? " ring-2 brightness-125 grayscale-25 border-r-2 border-b-2 border-white" : ""}`,
        ]}
      >
        <span>{capitalizeFirst(getSortField(CAFE_REVIEW_SORT.DATE_DESC))}</span>
        <InlineEmoji emoji={arrowDown} styles={`w-5`} />
      </a>
    </li>
    {
      cafeReviewSortArray.map((option, index) => {
        // Skip date desc.
        if (index === 0) return;
        // @ts-expect-error
        const valueOfSortEnum = CAFE_REVIEW_SORT[option];
        return (
          <li>
            <a
              href={`${selected === option ? upOneLevelUrl(pageUrl) : pageUrl + "sort/" + option.toLocaleLowerCase().replace("_", "-")}`}
              class:list={[
                "hover:brightness-150 rounded-lg font-medium  whitespace-nowrap relative text-slate-200 p-1.5 m-0.5 bg-boxPrimary ring ring-yellow",
                `${selected === option ? " ring-2 brightness-125 grayscale-25 border-r-2 border-b-2 border-white" : ""}`,
              ]}
            >
              <span>{capitalizeFirst(getSortField(valueOfSortEnum))}</span>
              {valueOfSortEnum === CAFE_REVIEW_SORT.FAVORITES ? (
                <span class="text-yellow">{starMd}</span>
              ) : (
                <InlineEmoji emoji={arrowDown} styles={`w-5 ${getIsDesc(valueOfSortEnum) ? "" : "rotate-180"}`} />
              )}
            </a>
          </li>
        );
      })
    }
  </ul>
  {
    selected !== CAFE_REVIEW_SORT.DATE_DESC && (
      <span class="inline-block">
        <a href={basePgPath} class="text-amber-400 underline hover:cursor-pointer ">
          Reset Sorting
        </a>
      </span>
    )
  }
</div>
