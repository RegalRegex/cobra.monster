---
import type { CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import TopNav from "../components/TopNav.astro";
import type { MarkdownHeading } from "astro";
import TableOfContents from "../components/TableOfContents.astro";
import TagContents from "../components/TagContents.astro";
import { formatDate } from "src/utils/stringFormatters";
import BlogStyleMain from "@components/Snippets/BlogStyleMain.astro";
import ChiStar from "@components/ImageComponents/ChiStar.astro";

interface Props {
  post: CollectionEntry<"posts">;
  headings: MarkdownHeading[];
}

const {
  post: {
    slug,
    data: { title, subtitle, date, tags, blogExclude },
  },
  headings,
} = Astro.props;

const formattedDate = formatDate(date);

const listDecoStyle = "prose-ul:before:text-white";

const ogImg = blogExclude ? "https://cobra.monster/websiteMetaHeader.png" : `https://cobra.monster/blog/og/${slug}.png`;
---

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  <meta property="og:title" content={blogExclude ? `About Regal: ${title}` : title} />
  <meta property="og:description" content={subtitle} />
  <meta property="og:image" content={ogImg} />
  <title>{blogExclude ? `About Regal: ${title}` : title}</title>
</head>

<Layout blog={true}>
  <TopNav />
  <BlogStyleMain>
    <Fragment slot="header">
      <h1 class="font-black text-yellow decoration-4 decoration-white md:text-6xl text-4xl mb-5">{title}</h1>
      <h2 class="text-slate-200 md:text-3xl text-lg font-medium">{subtitle}</h2>
    </Fragment>
    <Fragment slot="aside">
      <div id="publishTags" class="border-t-2 border-slate-200 pb-4">
        <div class="mt-2">
          <div class="md:hidden flex">
            <p class="text-slate-200 text-sm">{blogExclude ? "Last Updated" : "Published"}: {formattedDate}</p>
          </div>
          <div class="md:flex flex-col hidden">
            <h3 class="font-medium text-2xl">{blogExclude ? "Last Updated" : "Published"}</h3>
            <p>{formattedDate}</p>
          </div>
        </div>
        {
          tags && (
            <div class="mt-2 text-sm">
              <TagContents pageUrl="/blog/tagged/" inline={true} tagIds={tags.map((tag) => tag.id)} />
            </div>
          )
        }
      </div>
      <span class="flex justify-around xl:text-3xl">
        <ChiStar /><ChiStar /><ChiStar /><ChiStar />
      </span>
      {headings.length > 0 && <TableOfContents headings={headings} />}
    </Fragment>
    <Fragment slot="main">
      <slot />
    </Fragment>
  </BlogStyleMain>
</Layout>
