---
import type { GetStaticPaths } from "astro";
import BookSummary from "@components/Books/BookSummary.astro";
import TagContents from "@components/TagContents.astro";
import BookListLayout from "@layouts/BookListLayout.astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { sortCollection } from "src/utils/sortCollection";
import FilterButtons, { BOOK_DISPLAY_VIEWS } from "@components/Books/FilterButtons.astro";

const bookReports: Array<CollectionEntry<"books">> = await getCollection("books");

const tags = await getCollection("bookTags");

export const getStaticPaths = (() => {
  return [{ params: { view: BOOK_DISPLAY_VIEWS.DEFAULT } }, { params: { view: BOOK_DISPLAY_VIEWS.COMPACT } }];
}) satisfies GetStaticPaths;

const { view } = Astro.params;
---

<BookListLayout>
  <TagContents slot="tag-list" pageUrl={`/books/${view}/tagged/`} tagIds={tags.sort((a, b) => a.id.localeCompare(b.id)).map((tag) => tag.id)} />
  <div slot="book-list">
    <FilterButtons activeTab={view} />
    <ul class="grid gap-5 grid-cols-1">
      {sortCollection(bookReports, "date").map((book, i) => <BookSummary book={book} view={view} />)}
    </ul>
  </div>
</BookListLayout>
